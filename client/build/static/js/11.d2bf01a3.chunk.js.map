{"version":3,"sources":["features/Admin/component/ItemListProduct/index.jsx","features/Admin/component/TableListProducts/index.jsx","features/Admin/page/Products/index.jsx"],"names":["useStyles","makeStyles","table","minWidth","image","maxWidth","ItemListProduct","row","OnClickEdit","OnClickRemove","classes","useState","loading1","setLoading1","loading2","setLoading2","TableRow","key","name","TableCell","component","scope","src","url","alt","className","align","tittle","mota","phanloai","gia","soluong","onClick","setTimeout","loading","EditOutlined","DeleteOutlined","TableListProducts","props","page","rowsPerPage","setPage","setRowsPerPage","products","sort","category","setProducts","totalProducts","fetchData","dispatch","useDispatch","history","useHistory","HandleRemoveProduct","product","ProductId","_id","filter","action","DeleteProduct","HandleEditProduct","a","productId","push","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","index","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","ProductsAdmin","setLoading","setCategory","search","setSort","React","produtcs","setTotalProducts","data","productApi","getproductAdmin","res","useEffect","console","log","countFullProducts","fetchDataDefault","hanhdle","length","style","marginBottom","display","width","placeholder","onChange","Search","onSearch"],"mappings":"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","file":"static/js/11.d2bf01a3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, TableCell, TableRow } from '@material-ui/core';\r\nimport { Button } from 'antd';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nItemListProduct.propTypes = {\r\n\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    image: {\r\n        maxWidth: 100\r\n    }\r\n\r\n});\r\n\r\n\r\nfunction ItemListProduct({ row, OnClickEdit, OnClickRemove }) {\r\n    const classes = useStyles();\r\n    const [loading1, setLoading1] = useState(false);\r\n    const [loading2, setLoading2] = useState(false);\r\n    // álkd\r\n    const handleEdit = () => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            OnClickEdit(row);\r\n            setLoading1(false);\r\n        }, 1000)\r\n\r\n    }\r\n    const handleRemove = () => {\r\n        setLoading2(true);\r\n        setTimeout(() => {\r\n            OnClickRemove(row);\r\n            setLoading2(false);\r\n        }, 1000)\r\n\r\n    }\r\n    return (\r\n        <TableRow key={row.name}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                <img src={row.image[0].url} alt=\"\" className={classes.image} />\r\n            </TableCell>\r\n            <TableCell align=\"left\" >{row.tittle} </TableCell>\r\n            <TableCell align=\"left\">{row.mota}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{row.phanloai}</TableCell>\r\n            <TableCell align=\"right\">{row.gia}</TableCell>\r\n            <TableCell align=\"right\">{row.soluong}</TableCell>\r\n            <TableCell align=\"center\">\r\n                <Button\r\n                    onClick={handleEdit}\r\n                    loading={loading1}\r\n                ><EditOutlined /></Button>\r\n                <Button\r\n                    onClick={handleRemove}\r\n                    loading={loading2}\r\n                ><DeleteOutlined /></Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default ItemListProduct;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport ItemListProduct from '../ItemListProduct';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddToProduct, DeleteProduct } from 'features/Products/productSlice'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport productApi from 'api/productsAPI';\r\n\r\nTableListProducts.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n\r\n});\r\n\r\n\r\n\r\nfunction TableListProducts(props) {\r\n    const { page, rowsPerPage, setPage, setRowsPerPage, sort, category, products, setProducts, totalProducts, fetchData } = props;\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const HandleRemoveProduct = (product) => {\r\n        const ProductId = product._id\r\n        setProducts(products.filter(product => product._id !== ProductId))\r\n\r\n        const action = DeleteProduct(ProductId);\r\n        dispatch(action);\r\n    }\r\n    const HandleEditProduct = async (product) => {\r\n        const productId = product._id;\r\n        history.push(\"/addedit/\" + productId);\r\n    }\r\n    const handleChangePage = async (event, newPage) => {\r\n        setPage(newPage)\r\n    };\r\n\r\n    const handleChangeRowsPerPage = async (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Hình ảnh</TableCell>\r\n                        <TableCell align=\"left\" className={classes.name}>\r\n                            Tên Sản Phẩm\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">Mô Tả</TableCell>\r\n                        <TableCell align=\"right\" >Category</TableCell>\r\n                        <TableCell align=\"right\">Giá</TableCell>\r\n                        <TableCell align=\"right\">Số lượng</TableCell>\r\n                        <TableCell align=\"center\">Hành động</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {products.map((row, index) => (\r\n                        <ItemListProduct\r\n                            key={index}\r\n                            row={row}\r\n                            OnClickEdit={HandleEditProduct}\r\n                            OnClickRemove={HandleRemoveProduct}\r\n                        />\r\n                    ))}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 15, 30]}\r\n                            count={totalProducts}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default TableListProducts;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableListProducts from 'features/Admin/component/TableListProducts';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Input, Select } from 'antd';\r\nimport { Option } from 'antd/lib/mentions';\r\nimport Search from 'antd/lib/input/Search';\r\nimport productApi from 'api/productsAPI';\r\n\r\nProductsAdmin.propTypes = {\r\n\r\n};\r\n\r\nfunction ProductsAdmin(props) {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sort, setSort] = useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [produtcs, setProducts] = useState([])\r\n    const [totalProducts, setTotalProducts] = useState(0);\r\n    const handleAddProduct = () => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            history.push('/addedit/');\r\n            setLoading(false);\r\n        }, 1000)\r\n\r\n    }\r\n    let data = {\r\n        sort: sort,\r\n        page: page + 1,\r\n        rowsPerPage: rowsPerPage,\r\n        category: category,\r\n\r\n    }\r\n    const fetchData = async () => {\r\n        const res = await productApi.getproductAdmin(data)\r\n        setProducts(res.products)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [category])\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [sort])\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [page])\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [rowsPerPage])\r\n    useEffect(() => {\r\n        console.log(\"search\", search);\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        const fetchDataDefault = async () => {\r\n            const res = await productApi.getproductAdmin(data)\r\n            setProducts(res.products)\r\n            setTotalProducts(res.countFullProducts)\r\n        }\r\n        fetchDataDefault()\r\n    }, [])\r\n    const hanhdle = async (value) => {\r\n        const res = await productApi.search(value)\r\n        setProducts(res)\r\n        setTotalProducts(res.length)\r\n    }\r\n    return (\r\n        <div className=\"ProductAdmin\">\r\n            <div className=\"ProductAdmin__menu\" style={{ marginBottom: \"10px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <Button\r\n                        onClick={handleAddProduct}\r\n                        loading={loading}\r\n                    > Thêm sản phẩm mới</Button>\r\n                    <Select\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Danh mục sản phẩm  \"\r\n                        onChange={(value) => {\r\n                            setCategory(value);\r\n                        }}\r\n                    >\r\n                        <Option value=\"quan-nam\">Quần nam</Option>\r\n                        <Option value=\"giay-dep\">Giày dép</Option>\r\n                        <Option value=\"phu-kien\">Phụ kiện</Option>\r\n                    </Select>\r\n                    <Select\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Sắp xếp theo giá sản phẩm\"\r\n                        onChange={(value) => {\r\n                            setSort(value);\r\n\r\n                        }}\r\n                    >\r\n                        <Option value=\"gia\">Giá tăng dần</Option>\r\n                        <Option value=\"-gia\">Giá giảm dần</Option>\r\n                    </Select>\r\n                    <Input.Search onSearch={hanhdle} />\r\n                </div>\r\n            </div>\r\n            <div className=\"ProductAdmin__table\">\r\n                <TableListProducts\r\n                    page={page}\r\n                    totalProducts={totalProducts}\r\n                    rowsPerPage={rowsPerPage}\r\n                    setPage={setPage}\r\n                    setRowsPerPage={setRowsPerPage}\r\n                    products={produtcs}\r\n                    setProducts={setProducts}\r\n                    fetchData={fetchData}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductsAdmin;"],"sourceRoot":""}