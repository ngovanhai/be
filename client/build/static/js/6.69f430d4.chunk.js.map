{"version":3,"sources":["features/Admin/component/previewImage/index.jsx","features/Admin/page/AddEditProducts/index.jsx"],"names":["PreviewImage","props","url","id","onClickRemove","loading","console","log","Grid","item","xs","className","onClick","src","alt","Option","Select","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","AddEditProducts","productId","useParams","useState","data","setData","useDispatch","setLoadingd","setLoading","loadingAdd","setLoadingAdd","isAddmode","urlImage","setUrlImage","tailLayout","wrapperCol","offset","span","handlePreview","e","a","preventDefault","files","target","formData","FormData","alert","length","i","size","type","append","axios","post","headers","res","message","handleRemove","userApi","deleteImage","public_id","filterImage","filter","image","useEffect","productApi","get","getProduct","Object","keys","Container","tittle","container","multiple","onChange","map","style","labelCol","name","initialValues","mota","gia","soluong","sale","phanloai","onFinish","values","Math","trunc","random","create","addProduct","onSubmit","update","updateProduct","onUpdate","onFinishFailed","errorInfo","Item","label","rules","required","value","TextArea","rows","htmlType"],"mappings":"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","file":"static/js/6.69f430d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport './previewImage.scss';\r\nPreviewImage.propTypes = {\r\n\r\n};\r\n\r\nfunction PreviewImage(props) {\r\n    const { url, id, onClickRemove, loading } = props\r\n    console.log(url, id);\r\n    const remove = () => {\r\n        onClickRemove(id)\r\n    }\r\n    return (\r\n\r\n        <Grid item xs={6}> <span><HighlightOffIcon className=\"Preview__delete\" onClick={remove} /></span>\r\n            <img src={url}\r\n                className=\"Preview__img\"\r\n                alt=\"\" />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default PreviewImage;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Container, TextField, TextareaAutosize, MenuItem, makeStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport * as yup from 'yup';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AddToProduct } from \"features/Products/productSlice\";\r\nimport productApi from \"api/productsAPI\";\r\nimport { Roller } from \"react-awesome-spinners\";\r\n\r\nimport './AddEditProducts.scss';\r\nimport userApi from \"api/useAPI\";\r\nimport axios from \"axios\";\r\nimport PreviewImage from \"features/Admin/component/previewImage\";\r\nimport { AddToItem } from \"features/Admin/itemSlice\";\r\nimport { Input, Button, Form, Select, Card } from \"antd\";\r\nconst { Option } = Select;\r\nAddEditProducts.propTypes = {\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 800,\r\n    },\r\n}));\r\n\r\nconst options = [\r\n    { value: \"quan-nam\", label: \"Quần nam\" },\r\n    { value: \"phu-kien\", label: \"Phụ kiện\" },\r\n    { value: \"giay-dep\", label: \"Giày dép\" }\r\n];\r\n\r\n\r\nfunction AddEditProducts(props) {\r\n    const classes = useStyles()\r\n    const { productId } = useParams();\r\n    const [data, setData] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const [loadingd, setLoadingd] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingAdd, setLoadingAdd] = useState(false)\r\n    const isAddmode = !productId;\r\n    const [urlImage, setUrlImage] = useState([]);\r\n    const layout = {\r\n        labelCol: {\r\n            span: 6\r\n        },\r\n        wrapperCol: {\r\n            span: 18\r\n        }\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: {\r\n            offset: 6,\r\n            span: 18\r\n        }\r\n    };\r\n\r\n\r\n    const handlePreview = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const files = e.target.files;\r\n            let formData = new FormData()\r\n            if (!files) return alert(\"! File not exits\")\r\n            if (files.length > 1) {\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].size > 4096 * 4096) return alert(\"File too large!\")\r\n                    if (files[i].type !== \"image/jpeg\" && files[i].type !== \"image/png\")\r\n                        return alert(\"file fomat is incorrect\")\r\n                    formData.append(`images${i}`, files[i])\r\n                }\r\n            }\r\n            if (files.length === 1) {\r\n                if (files[0].size > 1024 * 1024) return alert(\"File too large!\")\r\n                if (files[0].type !== 'image/jpeg' && files[0].type !== 'image/png')\r\n                    return alert(\"file fomat is incorrect\")\r\n                formData.append(`images0`, files[0])\r\n            }\r\n            try {\r\n                setLoading(true)\r\n                const res = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n                    headers: { 'content-type': 'multipart/form-data' }\r\n                })\r\n                setUrlImage(res.data)\r\n                setLoading(false)\r\n\r\n            } catch (err) {\r\n                alert(err.message)\r\n            }\r\n        } catch (err) {\r\n            alert(err.message)\r\n        }\r\n    }\r\n    // const fetchProductsList = async () => {\r\n    //     try {\r\n    //         const response = await productApi.getAll();\r\n    //         dispatch(AddToProduct(response));\r\n\r\n    //     } catch (err) {\r\n    //         console.log('failed to fetch product list :')\r\n    //     }\r\n    // }\r\n    const onSubmit = values => {\r\n        if (urlImage.length === 0) {\r\n            alert(\"xin mời chọn ảnh\")\r\n            return\r\n        }\r\n        let data = { ...values, image: urlImage, \"product_id\": Math.trunc(Math.random() * 1000) };\r\n        const addProduct = async () => {\r\n            setLoadingAdd(true)\r\n            await productApi.create(data)\r\n            setLoadingAdd(false);\r\n            alert(\"Thêm sản phẩm thành công\")\r\n        }\r\n        addProduct();\r\n        //  fetchProductsList();\r\n    }\r\n    const onUpdate = values => {\r\n        if (urlImage.length === 0) {\r\n            alert(\"xin mời chọn ảnh\")\r\n            return\r\n        }\r\n        const data = { ...values, image: urlImage };\r\n        const updateProduct = async () => {\r\n            setLoadingAdd(true)\r\n            await productApi.update(productId, data)\r\n            setLoadingAdd(false)\r\n            alert(\"sủa sản phẩm thành công\")\r\n        }\r\n        updateProduct()\r\n        // fetchProductsList()\r\n    }\r\n    const handleRemove = async (id) => {\r\n        await userApi.deleteImage({ public_id: id })\r\n        const filterImage = urlImage.filter(image => image.public_id !== id)\r\n        setUrlImage(filterImage)\r\n    }\r\n    useEffect(() => {\r\n        const getProduct = async () => {\r\n            const res = await productApi.get(productId)\r\n            setUrlImage(res.image)\r\n            setData(res);\r\n            setLoadingd(false);\r\n        }\r\n        getProduct()\r\n    }, [])\r\n    const onFinish = (values) => {\r\n        if (isAddmode) {\r\n            onSubmit(values)\r\n        } else {\r\n            onUpdate(values)\r\n        }\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"AddEditProduct\">\r\n            {((isAddmode == false && Object.keys(data).length !== 0) || (isAddmode == true)) && (\r\n                <Container >\r\n                    <div className=\"AddEditProduct__content\">\r\n                        <h1>{isAddmode ? \"Thêm sản phẩm\" : data.tittle}</h1>\r\n                    </div>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={3} >\r\n                            <div className=\"AddEditProduct__upload\">\r\n                                <input type=\"file\" className=\"AddEditProduct__input\" multiple onChange={handlePreview}></input>\r\n                                <Grid container xs={2} className=\"AddEditProduct__show\">\r\n                                    {loading ? <Roller /> : (\r\n                                        urlImage.map(image => (\r\n                                            <PreviewImage\r\n                                                loading={loading}\r\n                                                url={image.url}\r\n                                                id={image.public_id}\r\n                                                onClickRemove={handleRemove}\r\n                                            />)\r\n                                        )\r\n                                    )}\r\n                                </Grid>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={9} style={{}}>\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                initialValues={{\r\n                                    tittle: isAddmode ? \"\" : data.tittle,\r\n                                    mota: isAddmode ? \"\" : data.mota,\r\n                                    gia: isAddmode ? \"\" : data.gia,\r\n                                    soluong: isAddmode ? \"\" : data.soluong,\r\n                                    sale: isAddmode ? \"\" : data.sale,\r\n                                    phanloai: isAddmode ? \"\" : data.phanloai,\r\n                                }}\r\n                                onFinish={onFinish}\r\n                                onFinishFailed={onFinishFailed}\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"Tên sản phẩm\"\r\n                                    name=\"tittle\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"Vui lòng nhập tên sản phẩm!\"\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Phân loại\"\r\n                                    name=\"phanloai\"\r\n                                >\r\n                                    <Select >\r\n                                        <Option value=\"quan-nam\">Quần nam</Option>\r\n                                        <Option value=\"phu-kien\">Phụ kiện</Option>\r\n                                        <Option value=\"giay-dep\">Giày dép</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Mô tả sản phẩm\"\r\n                                    name=\"mota\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"Vui lòng nhập mô tả sản phẩm !\"\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input.TextArea\r\n                                        rows={4}\r\n                                    />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"Giá sản phẩm\"\r\n                                    name=\"gia\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"Vui lòng nhập Giá sản phẩm!\"\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input type=\"number\">\r\n\r\n                                    </Input>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Số lượng\"\r\n                                    name=\"soluong\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"Vui lòng nhập số lượng!\"\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input type=\"number\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Khuyến mãi\"\r\n                                    name=\"sale\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"Vui lòng nhập số khuyến mãi !\"\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input type=\"number\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" loading={loadingAdd}>\r\n                                        {isAddmode ? \"Thêm sản phẩm\" : \"Sửa sản phẩm\"}\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            )}\r\n        </Card >\r\n    );\r\n}\r\n\r\nexport default AddEditProducts;\r\n"],"sourceRoot":""}